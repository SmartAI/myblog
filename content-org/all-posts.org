#+hugo_base_dir: ../
#+STARTUP: show2levels
#+AUTHOR: SmartAI


* DONE Home
CLOSED: [2025-04-21 Mon 14:30]
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:EXPORT_FILE_NAME: _index
:END:

Hello welcome to my blog, My name is Min

* DONE About
CLOSED: [2025-04-21 Mon 14:30]
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:EXPORT_HUGO_MENU: :menu main
:EXPORT_FILE_NAME: about
:EXPORT_HUGO_WEIGHT: 10
:END:

hello this is a about page

* DONE Blog
CLOSED: [2025-04-21 Mon 14:52]
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:END:
** DONE Blog
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:
** DONE My first post                                      
CLOSED: [2025-04-21 Mon 14:21]
:PROPERTIES:
:EXPORT_FILE_NAME: my-first-post
:END:
测试一下 Emacs Org Mode 写博客。
** DONE Reading 《专注的真相》                               :@books:reading:
CLOSED: [2025-04-21 Mon 15:21]
:PROPERTIES:
:EXPORT_FILE_NAME: the-truth-of-attention
:CUSTOM_ID: the-truth-of-attention
:END:
作者首先阐述了多巴胺是什么，其实多巴胺不是引起快乐的物质，而是一种引发想满足欲望的冲动，而快感本身是其他的化学物质，和多巴胺不相关。
多巴胺很容易被劫持，比如毒品。毒品可以完全重建人体的回路系统。大脑通常有两个回路，一个是欲望回路：主要是产生想要的感觉，追求那些让自己感觉良好或者追求基本需求满足（食物、水，社交等）。也帮助自己记住那些行为带来的奖励，从而重复这些行为。多巴胺在这个回路中起着重要作用。另外一个是控制回路，负责更加高级的思考，比如计划，做决策，抑制冲动等。他是大脑的刹车和方向盘。两个回路是对抗的关系，而毒品这一类物质，完全摧毁了控制回路，强化了欲望回路。所以毒品千万不能碰，他会导致大脑遭到不可逆的摧毁。

然后，生活中有很多很隐蔽的类似毒品的东西，比如赌博，色情。甚至烟酒茶等。还有现在出现的各种社交媒体，短视频，游戏等都是一类东西，这些都能够剥夺人类的注意力，并且回成瘾。

人的时间是有限的，专注力是非常宝贵的资源。如果没有自己的专注力，而是被其他东西一直刺激，那么或者就像僵死一样，多么可悲。事实上，专注力被剥夺，会导致一系列不可逆的影响，比如易怒，焦躁，缺乏同情心，无法深入思考，拒绝使用文字等。

李笑来讲到一些和育儿相关的，对我启发还挺大的，比较认同。比如看电视。他认为电视会影响注意力，应该尽量避免，特别是对于婴幼儿。如果实在要看电视可以看一些纪录片，但是看的时候也要专注，就像在电影院看电影一样不要保持安静。
再者就是如何解决小孩老是沉迷屏幕的问题，有很多人给出了很多建议，比如规定时间，用奖励等等。在作者看来其实根本上是需要其他的活动来占据这个注意力的时间。一个非常朴素的方法是户外活动。户外活动时间越长越好，孩子越小越是如此。运动几乎可以解决一切问题，体力是脑力的基础。学习的门槛不是天分和智商，而是体力健康和寿命。最好让孩子在十岁之前养成每天运动的习惯，比如跑步。还有一个是教会孩子编程，使用文字去创造。

后面作者深入探讨了不可抗拒的诱惑的来源，他的观点是价值观。这种说法我还是第一次听说，价值观反应的是一个人对待事物的自我判断，直白来说就是比较。比如健康和工作，你是如何排序的。另外还有一个排序的强度，所谓的价值观是否稳定。有的人压根没有比较过，有的人比较的时候比较含糊。这里涉及到控制回路的使用。

生活中有一些东西可以加强这个回路，比如恐惧。比如医院里面的大夫，每天看到这么多因为各种原因生病的病人，无形中加强了这个回路。还有就是看书，看书就像吸星大法，短时间吸收作者长期思考沉淀的知识。

关于重视文字，善用文字方面，我真的太认同了。生活中有太多的人已经失去了文字的使用，特别文字的输出。文字的输出其实是一个非常好的自我思考和沉淀的过程。哪怕是数学，本质上其实是语文。语文不好的话，其实啥都不行。比如我觉得语文能够锻炼一个人的思维逻辑。结合自己的经历，上学时候学语文，完全没有思维的训练，写作文就是一堆假大空。平时用到文字输出也就写写周报，没有系统性的文字输出训练。在重新读master之后，我终于知道了自己的问题，自己的写作差距很大，其实反应的是思维方式的问题。在未来，特别是AI发展起来之后，这种自然语言的运用更加重要。

文字的使用的一个场景是可以给自己洗脑，比如复述。这个非常有意思，因为大脑愿意相信自己产生的结果，而不是吸收别人的（比如看到或者听到）。所以洗脑的一个方法是，自己不断复述内容。这样欺骗大脑觉得这些内容是自己产生的。所以短时间内足量重复的向自己复述是真正改变自己最有效的方式，起码是之一。比如可以经常复述生活中发生的事情：看的电影、学习的知识、

然后回到一个根本问题，既然时间（或者注意力）是非再生的有限的资源，那么我应该把这个资源投入到哪里呢。一般来说我们的日常也就是，睡眠、运动、放松、学习、工作和其他。但是很多人把顺序错了，包括我自己。睡眠和运动放松觉得是比工作和学习更加重要的。一个最简单的例子，一次睡眠质量不佳会导致接下来两三天无法好好工作。该休息的时候就不要被其他东西干扰，特别是电子产品。发呆，泡澡，晒太阳，散步，唱歌跳舞都是很好的放松方
式。

关于工作和学习，一个比较好的建议是把工作当成学习，抱有为自己工作的mindset。在做决策的时候一定要考虑自己的专注力成本，这个成本有时候是非常巨大的。专注力是比天分智商，聪明机会这些更加宝贵的资源。

** DONE 我的博客写作工具流-基于Emacs                       :blog:emacs:hugo:
CLOSED: [2025-04-21 Mon 19:39]
:PROPERTIES:
:EXPORT_FILE_NAME: emacs-blog
:END:

这几天放假在家决定重拾一下 =Emacs= ，索性重新配置了一遍完整的 =Emacs=  配置，包括平时的写作（ =Org= ， =LaTeX= 等）以及编程（主要是 =C++= ）。折腾完毕之后又想起自己有个闲置的域名想用起来，所以就准备搭建这个博客。其实以前一直在考虑搭建个博客，但是总是放弃了，主要原因还是没有写作的动力。周末在去 =Parksvill= 的途中看了李笑来的书[[id:the-truth-of-attention][《专注力的真相》]]，让我觉得还是有必要加强自己的文字输出的习惯的。
#+hugo: more

这篇博文就简单记录一下我是如何搭建这个工作流的，主要是设计到几个部分： =Emacs= 中的配置， =hugo= 的使用以及模板， =GitHut Page= 的使用。

我使用的是 Emacs + Hugo + Github Pages 这个组合。因为我比较习惯写 org 文档，所以我在 Emacs 写完了 org 的博客之后直接使用 =ox-hugo= 导出到 markdown 然后 push 到 Github serving 即可。这里主要参考 =ox-hugo= 的[[https://ox-hugo.scripter.co/][官方文档]]。
=Emacs= 中配置主要是为了解决从 org 文件导出到 md 文件问题，我才用的是 One post per Org subtree 的方式，每一篇文章都是一个二级标题。每个一级标题都是一个单独的 section。这部分没啥好说的，根据官方文档来配置和组织自己的 org 文档就好了。需要特别注意的是 org 文件顶部需要配置 =hugo_base_dir= ，每篇文章需要配置导出的文件名称 =EXPORT_FILE_NAME= 。配置好了之后就可以用平时写 org 文档的方式写自己的博客文章了。理论上 org 支持的各种格式都是可以直接用，但是需要注意导出 markdown 的时候部分格式可能会产生非预期的行为。需要导出的时候可以使用 Emacs 中的快捷键 =C-c C-e H H= 导出到 markdown 文档。

为了使用 Hugo 生成静态网站，可以在本地安装环境和预览生成的网页。关于 Hugo 的安装可查看官方文档。这里我推荐一个非常简单的模板 [[https://themes.gohugo.io/themes/hugo-bearblog/][hugo-bear]] , 按照文档配置即可。配置完成后在本地运行 =hugo server= 确保本地可以成功预览网页。


为了网站能够在线 serving，有非常多的选择。有一些付费的也有免费的方案，比如 =cloudflare= 或者 =GitHub Pages= ，我自己使用的是 =GitHub Pages= 的方式。 =GitHub Pages= 本质上是 serving 静态文件的服务。所以在这之前还需要使用 hugo 来根据 md 文件生成静态文件。由于 =GitHub= 有 =Action= 的功能，这样就很方便在我们 =Push= 代码到 =remote= 之后自动生成这个静态文件。至于 =Action= 的配置方法，我直接问了一下 =ChatGPT= ，这个脚本直接可以使用。保存这个脚本到博客代码仓库的 =.github/workflows/deploy.yml= 文件中。

#+begin_src yaml
  name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch (e.g., main)
  push:
    branches:
      - main  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.146.6 
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v4 
        with:
          submodules: recursive 
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Upload the built html files
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 
#+end_src

另外在需要在代码仓库的 =setting= 中开启 pages 使用 =Actions=，同时可以在里面配置自己的域名，可以参考这个截图：
[[file:~/Workspace/myblog/static/images/github-page.png]]


*** 总结
至此，整个流程应该是跑通了，这篇文章就是通过这个流程发布的。总结一下使用 Emacs 写 blog 几个关键步骤：
- 配置 ox-hugo，并且按照文档要求组织 org 文件
- 本地安装和配置 hugo 网站，包括 theme
- 配置 Github Pages，自定义域名
- 配置 Github 工作流，支持 Git Push 之后自动发布

 再之后就完全可以在 Emacs 中写文字然后方便发布成在线文章了。接下来还有一些优化空间，包括使用 Org mode 的 Capture tempalte 功能来快创建文章，配置中英文不同的版本，以及一些样式等等。希望这篇文章对有同样需求的朋友有帮助，你也可以直接参考我的全部源代码：[[https://github.com/SmartAI/myblog][博客源代码]]


*** References
- https://ox-hugo.scripter.co/
- https://github.com/SmartAI/myblog
  



